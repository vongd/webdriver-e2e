var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { PageDecorator, BasePage } from '../utils.js';
import { Dialog as DialogLocators } from '../../locators/1.73.0.js';
/**
 * Page Object for Custom Style Modal Dialogs (non-native)
 *
 * @category Dialog
 */
let ModalDialog = class ModalDialog extends BasePage {
    constructor() {
        super(...arguments);
        /**
         * @private
         */
        this.locatorKey = 'Dialog';
    }
    /**
     * Get the dialog's message in a Promise
     */
    async getMessage() {
        return this.message$.getText();
    }
    /**
     * Get the details message in a Promise
     */
    async getDetails() {
        return this.details$.getText();
    }
    /**
     * Get the list of buttons as WebElements
     *
     * @returns Promise resolving to Array of WebElement items representing the buttons
     */
    async getButtons() {
        return this.buttonContainer$.$$(this.locators.button);
    }
    /**
     * Push a button with given title if it exists
     *
     * @param title title/text of the button
     */
    async pushButton(title) {
        const buttons = await this.getButtons();
        const titles = await Promise.all(buttons.map(async (btn) => btn.getAttribute('title')));
        const index = titles.findIndex((value) => value === title);
        if (index > -1) {
            await buttons[index].click();
        }
    }
    /**
     * Close the dialog using the 'cross' button
     */
    async close() {
        return this.closeButton$.click();
    }
};
ModalDialog = __decorate([
    PageDecorator(DialogLocators)
], ModalDialog);
export { ModalDialog };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTW9kYWxEaWFsb2cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcGFnZW9iamVjdHMvZGlhbG9nL01vZGFsRGlhbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQWtCLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUNyRSxPQUFPLEVBQUUsTUFBTSxJQUFJLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFBO0FBR25FOzs7O0dBSUc7QUFFSSxJQUFNLFdBQVcsR0FBakIsTUFBTSxXQUFZLFNBQVEsUUFBK0I7SUFBekQ7O1FBQ0g7O1dBRUc7UUFDSSxlQUFVLEdBQUcsUUFBaUIsQ0FBQTtJQTZDekMsQ0FBQztJQTNDRzs7T0FFRztJQUNILEtBQUssQ0FBQyxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFRDs7T0FFRztJQUNILEtBQUssQ0FBQyxVQUFVO1FBQ1osT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ2xDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsS0FBSyxDQUFDLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUN6RCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILEtBQUssQ0FBQyxVQUFVLENBQUUsS0FBYTtRQUMzQixNQUFNLE9BQU8sR0FBRyxNQUFNLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtRQUN2QyxNQUFNLE1BQU0sR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUN2RixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEtBQUssS0FBSyxDQUFDLENBQUE7UUFDMUQsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUU7WUFDWixNQUFNLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQTtTQUMvQjtJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNILEtBQUssQ0FBQyxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFBO0lBQ3BDLENBQUM7Q0FDSixDQUFBO0FBakRZLFdBQVc7SUFEdkIsYUFBYSxDQUFDLGNBQWMsQ0FBQztHQUNqQixXQUFXLENBaUR2QjtTQWpEWSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZURlY29yYXRvciwgSVBhZ2VEZWNvcmF0b3IsIEJhc2VQYWdlIH0gZnJvbSAnLi4vdXRpbHMuanMnXG5pbXBvcnQgeyBEaWFsb2cgYXMgRGlhbG9nTG9jYXRvcnMgfSBmcm9tICcuLi8uLi9sb2NhdG9ycy8xLjczLjAuanMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgTW9kYWxEaWFsb2cgZXh0ZW5kcyBJUGFnZURlY29yYXRvcjx0eXBlb2YgRGlhbG9nTG9jYXRvcnM+IHt9XG4vKipcbiAqIFBhZ2UgT2JqZWN0IGZvciBDdXN0b20gU3R5bGUgTW9kYWwgRGlhbG9ncyAobm9uLW5hdGl2ZSlcbiAqXG4gKiBAY2F0ZWdvcnkgRGlhbG9nXG4gKi9cbkBQYWdlRGVjb3JhdG9yKERpYWxvZ0xvY2F0b3JzKVxuZXhwb3J0IGNsYXNzIE1vZGFsRGlhbG9nIGV4dGVuZHMgQmFzZVBhZ2U8dHlwZW9mIERpYWxvZ0xvY2F0b3JzPiB7XG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBwdWJsaWMgbG9jYXRvcktleSA9ICdEaWFsb2cnIGFzIGNvbnN0XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGRpYWxvZydzIG1lc3NhZ2UgaW4gYSBQcm9taXNlXG4gICAgICovXG4gICAgYXN5bmMgZ2V0TWVzc2FnZSAoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZSQuZ2V0VGV4dCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBkZXRhaWxzIG1lc3NhZ2UgaW4gYSBQcm9taXNlXG4gICAgICovXG4gICAgYXN5bmMgZ2V0RGV0YWlscyAoKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGV0YWlscyQuZ2V0VGV4dCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBsaXN0IG9mIGJ1dHRvbnMgYXMgV2ViRWxlbWVudHNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIFByb21pc2UgcmVzb2x2aW5nIHRvIEFycmF5IG9mIFdlYkVsZW1lbnQgaXRlbXMgcmVwcmVzZW50aW5nIHRoZSBidXR0b25zXG4gICAgICovXG4gICAgYXN5bmMgZ2V0QnV0dG9ucyAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ1dHRvbkNvbnRhaW5lciQuJCQodGhpcy5sb2NhdG9ycy5idXR0b24pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHVzaCBhIGJ1dHRvbiB3aXRoIGdpdmVuIHRpdGxlIGlmIGl0IGV4aXN0c1xuICAgICAqXG4gICAgICogQHBhcmFtIHRpdGxlIHRpdGxlL3RleHQgb2YgdGhlIGJ1dHRvblxuICAgICAqL1xuICAgIGFzeW5jIHB1c2hCdXR0b24gKHRpdGxlOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgY29uc3QgYnV0dG9ucyA9IGF3YWl0IHRoaXMuZ2V0QnV0dG9ucygpXG4gICAgICAgIGNvbnN0IHRpdGxlcyA9IGF3YWl0IFByb21pc2UuYWxsKGJ1dHRvbnMubWFwKGFzeW5jIChidG4pID0+IGJ0bi5nZXRBdHRyaWJ1dGUoJ3RpdGxlJykpKVxuICAgICAgICBjb25zdCBpbmRleCA9IHRpdGxlcy5maW5kSW5kZXgoKHZhbHVlKSA9PiB2YWx1ZSA9PT0gdGl0bGUpXG4gICAgICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICAgICAgICBhd2FpdCBidXR0b25zW2luZGV4XS5jbGljaygpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbG9zZSB0aGUgZGlhbG9nIHVzaW5nIHRoZSAnY3Jvc3MnIGJ1dHRvblxuICAgICAqL1xuICAgIGFzeW5jIGNsb3NlICgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xvc2VCdXR0b24kLmNsaWNrKClcbiAgICB9XG59XG4iXX0=