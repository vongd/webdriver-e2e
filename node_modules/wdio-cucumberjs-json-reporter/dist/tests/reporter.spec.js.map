{"version":3,"file":"reporter.spec.js","sourceRoot":"","sources":["../../lib/tests/reporter.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AACzB,4CAAkF;AAClF,6CAY2B;AAE3B,uCAA2E;AAC3E,0CAAuC;AAEvC,2DAAqD;AACrD,6CAA0C;AAC1C,gDAAwB;AAExB,QAAQ,CAAE,UAAU,EAAE,GAAG,EAAE;IACvB,IAAI,WAAW,GAA+B,IAAI,CAAC;IACnD,MAAM,SAAS,GAAG,MAAM,CAAC;IACzB,MAAM,WAAW,GAAG,cAAc,CAAC;IACnC,MAAM,aAAa,GAAG,cAAI,CAAC,IAAI,CAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAE,CAAC;IAClE,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAE,aAAa,EAAE,WAAW,CAAE,CAAC;IAC5D,SAAS,CAAE,GAAG,EAAE;QACZ,IAAK,CAAC,EAAE,CAAC,UAAU,CAAE,aAAa,CAAE,EAAG;YACnC,EAAE,CAAC,SAAS,CAAE,aAAa,CAAE,CAAC;YAC9B,EAAE,CAAC,SAAS,CAAE,EAAE,CAAC,QAAQ,CAAE,WAAW,EAAE,GAAG,CAAE,CAAE,CAAC;SACnD;IACL,CAAC,CAAE,CAAC;IAEJ,UAAU,CAAE,GAAG,EAAE;QACb,WAAW,GAAG,IAAI,kBAA0B,CAAE;YAC1C,UAAU,EAAE,mBAAmB;YAC/B,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,GAAG,SAAS,IAAI,WAAW,EAAE;SACzC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,SAAS,CAAE,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,qBAAa,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC5B,sBAAc,CAAC,KAAK,GAAG,EAAE,CAAC;QAC1B,OAAO,+BAAuB,CAAC,OAAO,CAAC;IAC3C,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,WAAW,EAAE,GAAG,EAAE;QACxB,EAAE,CAAE,gEAAgE,EAAE,GAAG,EAAE;YACvE,MAAM,iBAAiB,GAAG,IAAI,kBAA0B,CAAE;gBACtD,OAAO,EAAE,cAAI,CAAC,IAAI,CAAE,SAAS,EAAE,WAAW,CAAE,CAAC,OAAO,CAAE,IAAI,EAAE,GAAG,CAAE;aACpE,CAAE,CAAC;YAEJ,MAAM,CAAE,iBAAiB,CAAC,OAAO,CAAE,CAAC,eAAe,EAAE,CAAC;QAC1D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,kCAAkC,EAAE,GAAG,EAAE;YACzC,MAAM,CAAE,WAAW,CAAC,OAAO,CAAE,CAAC,eAAe,EAAE,CAAC;YAChD,MAAM,CAAE,WAAW,CAAC,gBAAgB,CAAE,CAAC,QAAQ,EAAE,CAAC;YAClD,MAAM,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC,eAAe,EAAE,CAAC;QACnD,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,eAAe,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAE,qDAAqD,EAAE,GAAG,EAAE;YAC5D,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;YAChC,MAAM,mBAAmB,GAAa,WAAW,CAAC,mBAAmB,CAAC;YACtE,MAAM,oBAAoB,GAAqB,IAAI;iBAC9C,KAAK,CAAE,mBAAmB,EAAE,mBAAmB,CAAE;iBACjD,eAAe,CAAE,QAAQ,CAAE,CAAC;YAEjC,MAAM,CAAE,WAAW,CAAC,gBAAgB,CAAE,CAAC,QAAQ,EAAE,CAAC;YAElD,WAAW,CAAC,aAAa,CAAE,EAAyB,CAAE,CAAC;YAEvD,MAAM,CAAE,oBAAoB,CAAE,CAAC,gBAAgB,EAAE,CAAC;YAClD,MAAM,CAAE,WAAW,CAAC,gBAAgB,CAAE,CAAC,OAAO,CAAE,QAAQ,CAAE,CAAC;QAC/D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,6DAA6D,EAAE,GAAG,EAAE;YACpE,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;YAChC,MAAM,oBAAoB,GAAqB,IAAI;iBAC9C,KAAK,CAAE,IAAI,mBAAQ,EAAE,EAAE,mBAAmB,CAAE;iBAC5C,eAAe,CAAE,QAAQ,CAAE,CAAC;YAEjC,WAAW,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACxC,MAAM,CAAE,WAAW,CAAC,gBAAgB,CAAE,CAAC,OAAO,CAAE,QAAQ,CAAE,CAAC;YAE3D,WAAW,CAAC,aAAa,CAAE,EAAyB,CAAE,CAAC;YAEvD,MAAM,CAAE,oBAAoB,CAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAC1D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,cAAc,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAE,iEAAiE,EAAE,GAAG,EAAE;YACxE,MAAM,WAAW,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;YAC3C,MAAM,uBAAuB,GAAG,IAAI;iBAC/B,KAAK,CAAE,WAAW,EAAE,sBAAsB,CAAE;iBAC5C,eAAe,CAAE,WAAW,CAAE,CAAC;YAEpC,MAAM,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC,eAAe,EAAE,CAAC;YAE/C,WAAW,CAAC,YAAY,CAAE,EAAwB,CAAE,CAAC;YAErD,MAAM,CAAE,uBAAuB,CAAE,CAAC,gBAAgB,EAAE,CAAC;YACrD,MAAM,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC,eAAe,EAAE,CAAC;QACnD,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,yEAAyE,EAAE,GAAG,EAAE;YAChF,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;YAChC,MAAM,WAAW,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;YAC3C,MAAM,uBAAuB,GAAG,IAAI;iBAC/B,KAAK,CAAE,WAAW,EAAE,sBAAsB,CAAE;iBAC5C,eAAe,CAAE,WAAW,CAAE,CAAC;YACpC,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,uBAAuB,CAAE,CAAC,eAAe,CAAE,sBAAc,CAAE,CAAC;YAErF,MAAM,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC,eAAe,EAAE,CAAC;YAE/C,WAAW,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACxC,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAC3C,WAAW,CAAC,YAAY,CAAE,4BAAoB,CAAE,CAAC;YAEjD,MAAM,CAAE,uBAAuB,CAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YACzD,MAAM,CAAE,WAAW,CAAC,MAAM,CAAE,CAAC,eAAe,EAAE,CAAC;QACnD,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,sEAAsE,EAAE,GAAG,EAAE;YAC7E,MAAM,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,sBAAsB,CAAE,CAAC;YAClF,MAAM,wBAAwB,GAAG,IAAI;iBAChC,KAAK,CAAE,WAAW,EAAE,uBAAuB,CAAE;iBAC7C,eAAe,CAAE,sBAAc,CAAE,CAAC;YAEvC,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAE3C,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAElE,WAAW,CAAC,YAAY,CAAE,4BAAoB,CAAE,CAAC;YAEjD,MAAM,CAAE,uBAAuB,CAAE,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YACzD,MAAM,CAAE,wBAAwB,CAAE,CAAC,oBAAoB,CAAE,4BAAoB,EAAE,qBAAa,CAAC,EAAE,CAAE,CAAC;YAClG,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,eAAe,EAAE,CAAC;QACpE,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,aAAa,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAE,wDAAwD,EAAE,GAAG,EAAE;YAC/D,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,oBAAoB,CAAE,CAAC,eAAe,CAAE,sBAAc,CAAE,CAAC;YAChH,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,CAAC,WAAW,EAAE,eAAe,CAAE,CAAC,eAAe,CAAE,KAAK,CAAE,CAAC;YACzG,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,aAAa,CAAE,CAAC,eAAe,EAAE,CAAC;YAElF,WAAW,CAAC,WAAW,CAAE,EAAuB,CAAE,CAAC;YAEnD,MAAM,CAAE,qBAAqB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAC3D,MAAM,CAAE,gBAAgB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YACtD,MAAM,CAAE,cAAc,CAAE,CAAC,oBAAoB,CAAE,EAAE,KAAK,EAAE,kBAAM,EAAE,OAAO,EAAE,kBAAM,EAAE,CAAE,CAAC;QACxF,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,uDAAuD,EAAE,GAAG,EAAE;YAC9D,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,oBAAoB,CAAE,CAAC,eAAe,CAAE,sBAAc,CAAE,CAAC;YAChH,MAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,CAAC,WAAW,EAAE,eAAe,CAAE,CAAC,eAAe,CAAE,IAAI,CAAE,CAAC;YACxG,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,aAAa,CAAE,CAAC,eAAe,EAAE,CAAC;YAElF,WAAW,CAAC,WAAW,CAAE,EAAuB,CAAE,CAAC;YAEnD,MAAM,CAAE,qBAAqB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAC3D,MAAM,CAAE,gBAAgB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YACtD,MAAM,CAAE,cAAc,CAAE,CAAC,oBAAoB,CAAE,EAAE,KAAK,EAAE,kBAAM,EAAE,OAAO,EAAE,iBAAK,EAAE,CAAE,CAAC;QACvF,CAAC,CAAE,CAAC;QACJ,EAAE,CAAE,2DAA2D,EAAE,GAAG,EAAE;YAClE,WAAW,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;YACxC,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,aAAa,CAAE,CAAC,eAAe,EAAE,CAAC;YACrF,WAAW,CAAC,WAAW,CAAE,EAAuB,CAAE,CAAC;YAEnD,MAAM,CAAE,iBAAiB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC3D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,WAAW,EAAE,GAAG,EAAE;QACxB,EAAE,CAAE,0CAA0C,EAAE,GAAG,EAAE;YACjD,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5F,WAAW,CAAC,SAAS,CAAE,EAAuB,CAAE,CAAC;YAEjD,MAAM,CAAE,mBAAmB,CAAE,CAAC,oBAAoB,CAAE,EAAE,KAAK,EAAE,kBAAM,EAAE,CAAE,CAAC;QAC5E,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,4EAA4E,EAAE,GAAG,EAAE;YACnF,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5F,WAAW,CAAC,SAAS,CAAE,EAAE,KAAK,EAAE,kBAAM,EAAE,KAAK,EAAE,EAAW,EAAuB,CAAE,CAAC;YAEpF,MAAM,CAAE,mBAAmB,CAAE,CAAC,oBAAoB,CAAE,EAAE,KAAK,EAAE,kBAAM,EAAE,KAAK,EAAE,EAAE,EAAE,CAAE,CAAC;QACvF,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,mEAAmE,EAAE,GAAG,EAAE;YAC1E,WAAW,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;YACxC,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE1F,WAAW,CAAC,SAAS,CAAE,EAAuB,CAAE,CAAC;YAEjD,MAAM,CAAE,iBAAiB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC3D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,aAAa,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAE,mEAAmE,EAAE,GAAG,EAAE;YAC1E,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,aAAa,CAAE,CAAC,eAAe,EAAE,CAAC;YAElF,WAAW,CAAC,WAAW,CAAE,EAAE,GAAG,EAAE,KAAK,EAAuB,CAAE,CAAC;YAE/D,MAAM,CAAE,cAAc,CAAE,CAAC,oBAAoB,CAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAE,CAAC;QACpE,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,YAAY,EAAE,GAAG,EAAE;QACzB,EAAE,CAAE,2BAA2B,EAAE,GAAG,EAAE;YAClC,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5F,WAAW,CAAC,UAAU,CAAE,EAAE,GAAG,EAAE,IAAI,EAAuB,CAAE,CAAC;YAE7D,MAAM,CAAE,mBAAmB,CAAE,CAAC,oBAAoB,CAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAE,CAAC;QACxE,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,YAAY,EAAE,GAAG,EAAE;QACzB,EAAE,CAAE,2BAA2B,EAAE,GAAG,EAAE;YAClC,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5F,WAAW,CAAC,UAAU,CAAE,EAAE,GAAG,EAAE,IAAI,EAAuB,CAAE,CAAC;YAE7D,MAAM,CAAE,mBAAmB,CAAE,CAAC,oBAAoB,CAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAE,CAAC;QACxE,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,YAAY,EAAE,GAAG,EAAE;QACzB,EAAE,CAAE,2BAA2B,EAAE,GAAG,EAAE;YAClC,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5F,WAAW,CAAC,UAAU,CAAE,EAAE,GAAG,EAAE,KAAK,EAAuB,CAAE,CAAC;YAE9D,MAAM,CAAE,mBAAmB,CAAE,CAAC,oBAAoB,CAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAE,CAAC;QACzE,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,aAAa,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAE,+CAA+C,EAAE,GAAG,EAAE;YACtD,MAAM,UAAU,GAAG,kBAAkB,CAAC;YAEtC,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,EAAE,EAAE,cAAc,EAAE,CAAC;YACpD,WAAW,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;YAE5C,MAAM,CAAE,IAAA,uBAAU,EAAE,UAAU,CAAE,CAAE,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;YAEpD,WAAW,CAAC,WAAW,EAAE,CAAC;YAE1B,MAAM,KAAK,GAAG,IAAA,sBAAW,EAAE,UAAU,CAAE,CAAC;YAExC,MAAM,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YACpC,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAE,CAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;YAC7E,MAAM,CAAE,IAAA,uBAAU,EAAE,UAAU,CAAE,CAAE,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;YAGnD,IAAA,qBAAU,EAAE,UAAU,CAAE,CAAC;QAC7B,CAAC,CAAE,CAAC;QACJ,EAAE,CAAE,kGAAkG,EAAE,GAAG,EAAE;YACzG,MAAM,UAAU,GAAG,kBAAkB,CAAC;YAEtC,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,EAAE,EAAE,cAAc,EAAE,CAAC;YACpD,WAAW,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;YAE5C,WAAW,CAAC,WAAW,EAAE,CAAC;YAC1B,WAAW,CAAC,WAAW,EAAE,CAAC;YAC1B,WAAW,CAAC,WAAW,EAAE,CAAC;YAC1B,WAAW,CAAC,WAAW,EAAE,CAAC;YAC1B,WAAW,CAAC,WAAW,EAAE,CAAC;YAE1B,MAAM,KAAK,GAAG,IAAA,sBAAW,EAAE,UAAU,CAAE,CAAC;YAExC,MAAM,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAEpC,KAAM,MAAM,QAAQ,IAAI,KAAK,EAAG;gBAC5B,MAAM,CAAI,IAAA,uBAAY,EAAE,cAAI,CAAC,OAAO,CAAE,UAAU,EAAE,QAAQ,CAAE,CAAa,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;aACnG;YAED,IAAA,qBAAU,EAAE,UAAU,CAAE,CAAC;QAC7B,CAAC,CAAE,CAAC;QACJ,EAAE,CAAE,sGAAsG,EAAE,GAAG,EAAE;YAC7G,MAAM,UAAU,GAAG,kBAAkB,CAAC;YACtC,MAAM,QAAQ,GAAG,GAAG,UAAU,oBAAoB,CAAC;YAEnD,IAAA,mBAAQ,EAAE,+BAA+B,EAAE,QAAQ,CAAE,CAAC;YAEtD,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,EAAE,EAAE,cAAc,EAAE,CAAC;YACpD,WAAW,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;YAC5C,WAAW,CAAC,OAAO,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAE/C,MAAM,CAAI,IAAA,uBAAY,EAAE,QAAQ,CAAa,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAEpE,WAAW,CAAC,WAAW,EAAE,CAAC;YAE1B,MAAM,KAAK,GAAG,IAAA,sBAAW,EAAE,UAAU,CAAE,CAAC;YAExC,MAAM,CAAE,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YACpC,MAAM,CAAI,IAAA,uBAAY,EAAE,QAAQ,CAAa,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAGpE,IAAA,qBAAU,EAAE,UAAU,CAAE,CAAC;QAC7B,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,sBAAsB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAE,wDAAwD,EAAE,GAAG,EAAE;YAC/D,MAAM,CAAE,WAAW,CAAC,oBAAoB,CAAE,2BAAmB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;QACxF,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,0EAA0E,EAAE,GAAG,EAAE;YACjF,MAAM,CAAE,WAAW,CAAC,oBAAoB,CAAE,yBAAiB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;QACtF,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,uBAAuB,EAAE,GAAG,EAAE;QACpC,EAAE,CAAE,yDAAyD,EAAE,GAAG,EAAE;YAChE,MAAM,CAAE,WAAW,CAAC,qBAAqB,CAAE,2BAAmB,EAAE,uBAAuB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;QAClH,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,mBAAmB,EAAE,GAAG,EAAE;QAChC,IAAI,mBAAmB,CAAC;QAExB,UAAU,CAAE,GAAG,EAAE;YACb,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,CAAC,WAAW,EAAE,kBAAkB,CAAE,CAAC,eAAe,CAAE,EAAE,CAAE,CAAC;QAC1G,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,qDAAqD,EAAE,GAAG,EAAE;YAC5D,MAAM,CAAE,WAAW,CAAC,iBAAiB,CAAE,+BAAuB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;YACrF,MAAM,CAAE,mBAAmB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC7D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,iEAAiE,EAAE,GAAG,EAAE;YACxE,MAAM,CAAE,WAAW,CAAC,iBAAiB,CAAE,wCAAgC,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;YAC9F,MAAM,CAAE,mBAAmB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC7D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,qEAAqE,EAAE,GAAG,EAAE;YAC5E,+BAAuB,CAAC,OAAO,GAAG,kBAAM,CAAC;YACzC,MAAM,CAAE,WAAW,CAAC,iBAAiB,CAAE,+BAAuB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;YACrF,MAAM,CAAE,mBAAmB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC7D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,6EAA6E,EAAE,GAAG,EAAE;YACpF,MAAM,CAAE,WAAW,CAAC,iBAAiB,CAAE,wBAAgB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;YAC9E,MAAM,CAAE,mBAAmB,CAAE,CAAC,gBAAgB,EAAE,CAAC;QACrD,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,mFAAmF,EAAE,GAAG,EAAE;YAC1F,MAAM,CAAE,WAAW,CAAC,iBAAiB,CAAE,6BAAqB,CAAE,CAAE,CAAC,eAAe,EAAE,CAAC;YACnF,MAAM,CAAE,mBAAmB,CAAE,CAAC,gBAAgB,EAAE,CAAC;QACrD,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,oBAAoB,EAAE,GAAG,EAAE;QACjC,EAAE,CAAE,4FAA4F,EAAE,GAAG,EAAE;YACnG,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG;gBACzB,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,gBAAgB,EAAE,EAAE,EAAE,GAAG,EAAE,iBAAiB,EAAE,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAC;aACpG,CAAC;YAEF,MAAM,CAAE,WAAW,CAAC,kBAAkB,EAAE,CAAE,CAAC,OAAO,CAAE,EAAE,MAAM,EAAE,kBAAkB,EAAE,CAAE,CAAC;QACzF,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,gBAAgB,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAE,oCAAoC,EAAE,GAAG,EAAE;YAC3C,MAAM,mBAAmB,GAAG;gBACxB,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,EAAE,EAAE,GAAG,EAAE,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE,cAAc,EAAE,CAAW;aAC5F,CAAC;YACF,MAAM,qBAAqB,GAAG,IAAI;iBAC7B,KAAK,CAAE,WAAW,EAAE,oBAAoB,CAAE;iBAC1C,eAAe,CAAE,mBAAmB,CAAE,CAAC;YAE5C,MAAM,CAAE,WAAW,CAAC,cAAc,EAAE,CAAE,CAAC,OAAO,CAAE,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC;YAC/E,MAAM,CAAE,qBAAqB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC/D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,aAAa,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAE,4CAA4C,EAAE,GAAG,EAAE;YACnD,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,oBAAoB,CAAE,CAAC;YAC9E,MAAM,oBAAoB,GAAG,IAAI;iBAC5B,KAAK,CAAE,WAAW,EAAE,mBAAmB,CAAE;iBACzC,eAAe,CAAE,EAAE,GAAG,EAAE,cAAc,EAAE,CAAE,CAAC;YAEhD,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAC3C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,sBAAc,CAAE,CAAC;YAE3D,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAE3E,WAAW,CAAC,WAAW,CAAE,EAAuB,CAAE,CAAC;YAEnD,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAC3E,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,eAAe,EAAE,CAAC;YACzE,MAAM,CAAE,qBAAqB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAC3D,MAAM,CAAE,oBAAoB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC9D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,kBAAkB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAE,sDAAsD,EAAE,GAAG,EAAE;YAC7D,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,mBAAO,EAAE,CAAC;YAC7D,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,kBAAM,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;YACxE,MAAM,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,oBAAoB,CAAE,CAAC;YAC9E,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,mBAAmB,CAAE,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;YAC3G,MAAM,iBAAiB,GAAG,IAAI;iBACzB,KAAK,CAAE,WAAW,EAAE,gBAAgB,CAAE;iBACtC,eAAe,CAAE,EAAE,GAAG,EAAE,cAAc,EAAE,CAAE,CAAC;YAEhD,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAC3C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,sBAAc,CAAE,CAAC;YAC3D,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAEjE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,eAAe,EAAE,CAAC;YACzE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAE3E,WAAW,CAAC,gBAAgB,CAAE,EAAuB,CAAE,CAAC;YAExD,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAE,CAAC,eAAe,EAAE,CAAC;YACzE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,OAAO,CAAE,CAAC,CAAE,CAAC;YAC3E,MAAM,CAAE,qBAAqB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAC3D,MAAM,CAAE,oBAAoB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAC1D,MAAM,CAAE,iBAAiB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC3D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,QAAQ,EAAE,GAAG,EAAE;QACrB,IAAI,UAA4B,CAAC;QACjC,SAAS,CAAE,GAAG,EAAE;YAEZ,UAAU,GAAG,IAAI,CAAC,KAAK,CAAE,OAAO,EAAE,MAAM,CAAE,CAAC,kBAAkB,EAAE,CAAC;QACpE,CAAC,CAAE,CAAC;QAEJ,SAAS,CAAE,GAAG,EAAE;YAEZ,UAAU,CAAC,SAAS,EAAE,CAAC;QAC3B,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,uCAAuC,EAAE,GAAG,EAAE;YAC9C,kBAA0B,CAAC,MAAM,CAAE,KAAK,CAAE,CAAC;YAE3C,MAAM,CAAE,UAAU,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAChD,MAAM,CAAE,UAAU,CAAE,CAAC,oBAAoB,CAAE,mCAAmC,EAAE;gBAC5E,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,sBAAU;aACnB,CAAE,CAAC;QACR,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,wCAAwC,EAAE,GAAG,EAAE;YAC/C,kBAA0B,CAAC,MAAM,CAAE,KAAK,EAAE,YAAY,CAAE,CAAC;YAEzD,MAAM,CAAE,UAAU,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;YAChD,MAAM,CAAE,UAAU,CAAE,CAAC,oBAAoB,CAAE,mCAAmC,EAAE;gBAC5E,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,YAAY;aACrB,CAAE,CAAC;QACR,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;IAEJ,QAAQ,CAAE,sBAAsB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAE,kFAAkF,EAAE,GAAG,EAAE;YACzF,MAAM,WAAW,GAAG,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,mBAAO,EAAE,CAAC;YAC7D,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,gBAAgB,CAAE,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;YAErG,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAC3C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,sBAAc,CAAE,CAAC;YAC3D,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAEjE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5E,WAAW,CAAC,oBAAoB,CAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,CAAE,CAAC;YAEzE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,eAAe,EAAE,CAAC;YAC5E,MAAM,CAAE,iBAAiB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC3D,CAAC,CAAE,CAAC;QAEJ,EAAE,CAAE,iFAAiF,EAAE,GAAG,EAAE;YACxF,MAAM,WAAW,GAAS;gBACtB,GAAG,EAAE,cAAc;gBACnB,MAAM,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,EAAE,mBAAO,EAAE;gBACxC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;aAC5D,CAAC;YACF,MAAM,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAE,WAAW,EAAE,gBAAgB,CAAE,CAAC,eAAe,CAAE,WAAW,CAAE,CAAC;YAErG,WAAW,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAa,CAAC;YAC3C,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAE,sBAAc,CAAE,CAAC;YAC3D,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YAEjE,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,eAAe,EAAE,CAAC;YAE5E,WAAW,CAAC,oBAAoB,CAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAE,CAAE,CAAC;YAE3E,MAAM,CAAE,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC,eAAe,EAAE,CAAC;YAC5E,MAAM,CAAE,iBAAiB,CAAE,CAAC,qBAAqB,CAAE,CAAC,CAAE,CAAC;QAC3D,CAAC,CAAE,CAAC;IACR,CAAC,CAAE,CAAC;AACR,CAAC,CAAE,CAAC","sourcesContent":["import * as fs from 'fs';\nimport { AFTER, BEFORE, FAILED, PASSED, PENDING, TEXT_PLAIN } from '../constants';\nimport {\n    EMPTY_FEATURE,\n    EMPTY_SCENARIO,\n    STEP_HOOK_ONSTART_STATS,\n    STEP_TEST_ONSTART_ARGUMENT_STATS,\n    STEP_TEST_ONSTART_STATS,\n    SUITE_FEATURE_STATS,\n    SUITE_FEATURE_UID,\n    SUITE_SCENARIO_STATS,\n    TEST_EMPTY_STATS,\n    TEST_NO_KEYWORD_STATS,\n    TEST_SCENARIO_STATS,\n} from './__mocks__/mocks';\nimport { HookStatsExtended, RunnerStatsExtended, SuiteStatsExtended, TestStatsExtended } from '../types/wdio';\nimport { copySync, readJsonSync, readdirSync, removeSync } from 'fs-extra';\nimport { Metadata } from '../metadata';\nimport { Step } from '../models';\nimport WdioCucumberJsJsonReporter from '../reporter';\nimport { fileExists } from './fileExists';\nimport path from 'path';\n\ndescribe( 'reporter', () => {\n    let tmpReporter: WdioCucumberJsJsonReporter = null;\n    const logFolder = '.tmp';\n    const logFileName = 'logFile.json';\n    const logFolderPath = path.join( __dirname, '../../', logFolder );\n    const logFilePath = path.join( logFolderPath, logFileName );\n    beforeAll( () => {\n        if ( !fs.existsSync( logFolderPath ) ) {\n            fs.mkdirSync( logFolderPath );\n            fs.closeSync( fs.openSync( logFilePath, 'w' ) );\n        }\n    } );\n\n    beforeEach( () => {\n        tmpReporter = new WdioCucumberJsJsonReporter( {\n            jsonFolder: '.tmp/json-folder/',\n            language: 'en',\n            logFile: `${logFolder}/${logFileName}`,\n        } );\n    } );\n\n    afterEach( () => {\n        jest.clearAllMocks();\n        EMPTY_FEATURE.elements = [];\n        EMPTY_SCENARIO.steps = [];\n        delete STEP_HOOK_ONSTART_STATS.keyword;\n    } );\n\n    describe( 'on create', () => {\n        it( 'should set the defaults if only the logfile option is provided', () => {\n            const noOptionsReporter = new WdioCucumberJsJsonReporter( {\n                logFile: path.join( logFolder, logFileName ).replace( '\\\\', '/' ),\n            } );\n\n            expect( noOptionsReporter.options ).toMatchSnapshot();\n        } );\n\n        it( 'should verify initial properties', () => {\n            expect( tmpReporter.options ).toMatchSnapshot();\n            expect( tmpReporter.instanceMetadata ).toBeNull();\n            expect( tmpReporter.report ).toMatchSnapshot();\n        } );\n    } );\n\n    describe( 'onRunnerStart', () => {\n        it( 'should set instance data if it is not available yet', () => {\n            const metadata = { foo: 'bar' };\n            const metadataClassObject: Metadata = tmpReporter.metadataClassObject;\n            const determineMetadataSpy: jest.SpyInstance = jest\n                .spyOn( metadataClassObject, 'determineMetadata' )\n                .mockReturnValue( metadata );\n\n            expect( tmpReporter.instanceMetadata ).toBeNull();\n\n            tmpReporter.onRunnerStart( {} as RunnerStatsExtended );\n\n            expect( determineMetadataSpy ).toHaveBeenCalled();\n            expect( tmpReporter.instanceMetadata ).toEqual( metadata );\n        } );\n\n        it( 'should set not set instance data if it is already available', () => {\n            const metadata = { foo: 'bar' };\n            const determineMetadataSpy: jest.SpyInstance = jest\n                .spyOn( new Metadata(), 'determineMetadata' )\n                .mockReturnValue( metadata );\n\n            tmpReporter.instanceMetadata = metadata;\n            expect( tmpReporter.instanceMetadata ).toEqual( metadata );\n\n            tmpReporter.onRunnerStart( {} as RunnerStatsExtended );\n\n            expect( determineMetadataSpy ).not.toHaveBeenCalled();\n        } );\n    } );\n\n    describe( 'onSuiteStart', () => {\n        it( 'should add the CucumberJS feature object if it is not available', () => {\n            const featureData = { keyword: 'feature' };\n            const getFeatureDataObjectSpy = jest\n                .spyOn( tmpReporter, 'getFeatureDataObject' )\n                .mockReturnValue( featureData );\n\n            expect( tmpReporter.report ).toMatchSnapshot();\n\n            tmpReporter.onSuiteStart( {} as SuiteStatsExtended );\n\n            expect( getFeatureDataObjectSpy ).toHaveBeenCalled();\n            expect( tmpReporter.report ).toMatchSnapshot();\n        } );\n\n        it( 'should add instance data to the feature if the feature is already there', () => {\n            const metadata = { foo: 'bar' };\n            const featureData = { keyword: 'feature' };\n            const getFeatureDataObjectSpy = jest\n                .spyOn( tmpReporter, 'getFeatureDataObject' )\n                .mockReturnValue( featureData );\n            jest.spyOn( tmpReporter, 'getScenarioDataObject' ).mockReturnValue( EMPTY_SCENARIO );\n\n            expect( tmpReporter.report ).toMatchSnapshot();\n\n            tmpReporter.instanceMetadata = metadata;\n            tmpReporter.report.feature = EMPTY_FEATURE;\n            tmpReporter.onSuiteStart( SUITE_SCENARIO_STATS );\n\n            expect( getFeatureDataObjectSpy ).not.toHaveBeenCalled();\n            expect( tmpReporter.report ).toMatchSnapshot();\n        } );\n\n        it( 'should add a scenario to the feature if the feature is already there', () => {\n            const getFeatureDataObjectSpy = jest.spyOn( tmpReporter, 'getFeatureDataObject' );\n            const getScenarioDataObjectSpy = jest\n                .spyOn( tmpReporter, 'getScenarioDataObject' )\n                .mockReturnValue( EMPTY_SCENARIO );\n\n            tmpReporter.report.feature = EMPTY_FEATURE;\n\n            expect( tmpReporter.report.feature.elements.length ).toEqual( 0 );\n\n            tmpReporter.onSuiteStart( SUITE_SCENARIO_STATS );\n\n            expect( getFeatureDataObjectSpy ).not.toHaveBeenCalled();\n            expect( getScenarioDataObjectSpy ).toHaveBeenCalledWith( SUITE_SCENARIO_STATS, EMPTY_FEATURE.id );\n            expect( tmpReporter.report.feature.elements ).toMatchSnapshot();\n        } );\n    } );\n\n    describe( 'onHookStart', () => {\n        it( 'should call `addStepData` to add a pending before step', () => {\n            const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' ).mockReturnValue( EMPTY_SCENARIO );\n            const containsStepsSpy = jest.spyOn( tmpReporter.utilsObject, 'containsSteps' ).mockReturnValue( false );\n            const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue();\n\n            tmpReporter.onHookStart( {} as HookStatsExtended );\n\n            expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n            expect( containsStepsSpy ).toHaveBeenCalledTimes( 1 );\n            expect( addStepDataSpy ).toHaveBeenCalledWith( { state: PASSED, keyword: BEFORE } );\n        } );\n\n        it( 'should call `addStepData` to add a pending after step', () => {\n            const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' ).mockReturnValue( EMPTY_SCENARIO );\n            const containsStepsSpy = jest.spyOn( tmpReporter.utilsObject, 'containsSteps' ).mockReturnValue( true );\n            const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue();\n\n            tmpReporter.onHookStart( {} as HookStatsExtended );\n\n            expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n            expect( containsStepsSpy ).toHaveBeenCalledTimes( 1 );\n            expect( addStepDataSpy ).toHaveBeenCalledWith( { state: PASSED, keyword: AFTER } );\n        } );\n        it( 'should not call `addStepData` to add a pending after step', () => {\n            tmpReporter.options.disableHooks = true;\n            const withDisabledHooks = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue();\n            tmpReporter.onHookStart( {} as HookStatsExtended );\n\n            expect( withDisabledHooks ).toHaveBeenCalledTimes( 0 );\n        } );\n    } );\n\n    describe( 'onHookEnd', () => {\n        it( 'should call update a hook step to passed', () => {\n            const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onHookEnd( {} as HookStatsExtended );\n\n            expect( updateStepStatusSpy ).toHaveBeenCalledWith( { state: PASSED } );\n        } );\n\n        it( 'should call update a hook step to the current state when there is an error', () => {\n            const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onHookEnd( { state: FAILED, error: {} as Error } as HookStatsExtended );\n\n            expect( updateStepStatusSpy ).toHaveBeenCalledWith( { state: FAILED, error: {} } );\n        } );\n\n        it( 'should not call `addUpdateStepStatus` to add a pending after step', () => {\n            tmpReporter.options.disableHooks = true;\n            const withDisabledHooks = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onHookEnd( {} as HookStatsExtended );\n\n            expect( withDisabledHooks ).toHaveBeenCalledTimes( 0 );\n        } );\n    } );\n\n    describe( 'onTestStart', () => {\n        it( 'should call `addStepDataSpy` to add a step when a test is started', () => {\n            const addStepDataSpy = jest.spyOn( tmpReporter, 'addStepData' ).mockReturnValue();\n\n            tmpReporter.onTestStart( { foo: 'bar' } as TestStatsExtended );\n\n            expect( addStepDataSpy ).toHaveBeenCalledWith( { foo: 'bar' } );\n        } );\n    } );\n\n    describe( 'onTestPass', () => {\n        it( 'should call update a step', () => {\n            const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onTestPass( { foo: true } as TestStatsExtended );\n\n            expect( updateStepStatusSpy ).toHaveBeenCalledWith( { foo: true } );\n        } );\n    } );\n\n    describe( 'onTestFail', () => {\n        it( 'should call update a step', () => {\n            const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onTestFail( { bar: true } as TestStatsExtended );\n\n            expect( updateStepStatusSpy ).toHaveBeenCalledWith( { bar: true } );\n        } );\n    } );\n\n    describe( 'onTestSkip', () => {\n        it( 'should call update a step', () => {\n            const updateStepStatusSpy = jest.spyOn( tmpReporter, 'updateStepStatus' ).mockReturnValue();\n\n            tmpReporter.onTestSkip( { bar: false } as TestStatsExtended );\n\n            expect( updateStepStatusSpy ).toHaveBeenCalledWith( { bar: false } );\n        } );\n    } );\n\n    describe( 'onRunnerEnd', () => {\n        it( 'should store the json file on the file system', () => {\n            const jsonFolder = './.tmp/ut-folder';\n\n            tmpReporter.report.feature = { id: 'this-feature' };\n            tmpReporter.options.jsonFolder = jsonFolder;\n\n            expect( fileExists( jsonFolder ) ).toEqual( false );\n\n            tmpReporter.onRunnerEnd();\n\n            const files = readdirSync( jsonFolder );\n\n            expect( files.length ).toEqual( 1 );\n            expect( files[0].includes( tmpReporter.report.feature.id ) ).toEqual( true );\n            expect( fileExists( jsonFolder ) ).toEqual( true );\n\n            // Clean up\n            removeSync( jsonFolder );\n        } );\n        it( 'should by default create a unique Json file and should not add in existing Json file onRunnerEnd', () => {\n            const jsonFolder = './.tmp/ut-folder';\n\n            tmpReporter.report.feature = { id: 'this-feature' };\n            tmpReporter.options.jsonFolder = jsonFolder;\n\n            tmpReporter.onRunnerEnd();\n            tmpReporter.onRunnerEnd();\n            tmpReporter.onRunnerEnd();\n            tmpReporter.onRunnerEnd();\n            tmpReporter.onRunnerEnd();\n\n            const files = readdirSync( jsonFolder );\n\n            expect( files.length ).toEqual( 5 );\n\n            for ( const jsonFile of files ) {\n                expect( ( readJsonSync( path.resolve( jsonFolder, jsonFile ) ) as any[] ).length ).toEqual( 1 );\n            }\n            // Clean up\n            removeSync( jsonFolder );\n        } );\n        it( 'should be able to add json to an existing json output when reportFilePerRetry option is set to false', () => {\n            const jsonFolder = './.tmp/ut-folder';\n            const jsonFile = `${jsonFolder}/this-feature.json`;\n\n            copySync( 'lib/tests/__mocks__/mock.json', jsonFile );\n\n            tmpReporter.report.feature = { id: 'this-feature' };\n            tmpReporter.options.jsonFolder = jsonFolder;\n            tmpReporter.options.reportFilePerRetry = false;\n\n            expect( ( readJsonSync( jsonFile ) as any[] ).length ).toEqual( 1 );\n\n            tmpReporter.onRunnerEnd();\n\n            const files = readdirSync( jsonFolder );\n\n            expect( files.length ).toEqual( 1 );\n            expect( ( readJsonSync( jsonFile ) as any[] ).length ).toEqual( 2 );\n\n            // Clean up\n            removeSync( jsonFolder );\n        } );\n    } );\n\n    describe( 'getFeatureDataObject', () => {\n        it( 'should be able to to create a feature JSON data object', () => {\n            expect( tmpReporter.getFeatureDataObject( SUITE_FEATURE_STATS ) ).toMatchSnapshot();\n        } );\n\n        it( 'should be able to to create a feature JSON data object with no line data', () => {\n            expect( tmpReporter.getFeatureDataObject( SUITE_FEATURE_UID ) ).toMatchSnapshot();\n        } );\n    } );\n\n    describe( 'getScenarioDataObject', () => {\n        it( 'should be able to to create a scenario JSON data object', () => {\n            expect( tmpReporter.getScenarioDataObject( TEST_SCENARIO_STATS, 'create-passed-feature' ) ).toMatchSnapshot();\n        } );\n    } );\n\n    describe( 'getStepDataObject', () => {\n        let getFailedMessageSpy;\n\n        beforeEach( () => {\n            getFailedMessageSpy = jest.spyOn( tmpReporter.utilsObject, 'getFailedMessage' ).mockReturnValue( {} );\n        } );\n\n        it( 'should be able to to create a step JSON data object', () => {\n            expect( tmpReporter.getStepDataObject( STEP_TEST_ONSTART_STATS ) ).toMatchSnapshot();\n            expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n\n        it( 'should be able to add arguments to the step if they are present', () => {\n            expect( tmpReporter.getStepDataObject( STEP_TEST_ONSTART_ARGUMENT_STATS ) ).toMatchSnapshot();\n            expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n\n        it( 'should be able to to create a step JSON data object based on a hook', () => {\n            STEP_HOOK_ONSTART_STATS.keyword = BEFORE;\n            expect( tmpReporter.getStepDataObject( STEP_HOOK_ONSTART_STATS ) ).toMatchSnapshot();\n            expect( getFailedMessageSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n\n        it( 'should be able to to create a step JSON data object based on malformed data', () => {\n            expect( tmpReporter.getStepDataObject( TEST_EMPTY_STATS ) ).toMatchSnapshot();\n            expect( getFailedMessageSpy ).toHaveBeenCalled();\n        } );\n\n        it( 'should be able to to create a step JSON data object based on missing keyword data', () => {\n            expect( tmpReporter.getStepDataObject( TEST_NO_KEYWORD_STATS ) ).toMatchSnapshot();\n            expect( getFailedMessageSpy ).toHaveBeenCalled();\n        } );\n    } );\n\n    describe( 'getCurrentScenario', () => {\n        it( 'should return the last number of the scenario array as the current running scenario number', () => {\n            tmpReporter.report.feature = {\n                elements: [{ foo: 'first-scenario' }, { bar: 'second-scenario' }, { foobar: 'current-scenario' }],\n            };\n\n            expect( tmpReporter.getCurrentScenario() ).toEqual( { foobar: 'current-scenario' } );\n        } );\n    } );\n\n    describe( 'getCurrentStep', () => {\n        it( 'should return current running step', () => {\n            const currentScenarioMock = {\n                steps: [{ foo: 'first-step' }, { foo: 'second-step' }, { foo: 'current-step' }] as Step[],\n            };\n            const getCurrentScenarioSpy = jest\n                .spyOn( tmpReporter, 'getCurrentScenario' )\n                .mockReturnValue( currentScenarioMock );\n\n            expect( tmpReporter.getCurrentStep() ).toEqual( currentScenarioMock.steps[2] );\n            expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n    } );\n\n    describe( 'addStepData', () => {\n        it( 'should add step data to a current scenario', () => {\n            const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' );\n            const getStepDataObjectSpy = jest\n                .spyOn( tmpReporter, 'getStepDataObject' )\n                .mockReturnValue( { foo: 'current-step' } );\n\n            tmpReporter.report.feature = EMPTY_FEATURE;\n            tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n\n            expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 0 );\n\n            tmpReporter.addStepData( {} as HookStatsExtended );\n\n            expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n            expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n            expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n            expect( getStepDataObjectSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n    } );\n\n    describe( 'updateStepStatus', () => {\n        it( 'should update step data of the current scenario step', () => {\n            const pendingStep = { foo: 'current-step', status: PENDING };\n            const updatedStep = { foo: 'current-step', status: PASSED, bar: false };\n            const getCurrentScenarioSpy = jest.spyOn( tmpReporter, 'getCurrentScenario' );\n            const getStepDataObjectSpy = jest.spyOn( tmpReporter, 'getStepDataObject' ).mockReturnValue( updatedStep );\n            const getCurrentStepSpy = jest\n                .spyOn( tmpReporter, 'getCurrentStep' )\n                .mockReturnValue( { foo: 'current-step' } );\n\n            tmpReporter.report.feature = EMPTY_FEATURE;\n            tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n            tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n            expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n            expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n\n            tmpReporter.updateStepStatus( {} as TestStatsExtended );\n\n            expect( tmpReporter.report.feature.elements[0].steps ).toMatchSnapshot();\n            expect( tmpReporter.report.feature.elements[0].steps.length ).toEqual( 1 );\n            expect( getCurrentScenarioSpy ).toHaveBeenCalledTimes( 1 );\n            expect( getStepDataObjectSpy ).toHaveBeenCalledTimes( 1 );\n            expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n    } );\n\n    describe( 'attach', () => {\n        let mockStdout: jest.SpyInstance;\n        beforeAll( () => {\n            //   process.emit = jest.fn();\n            mockStdout = jest.spyOn( process, 'emit' ).mockImplementation();\n        } );\n\n        afterEach( () => {\n            //   process.emit.mockClear();\n            mockStdout.mockClear();\n        } );\n\n        it( 'should be able to attach default data', () => {\n            WdioCucumberJsJsonReporter.attach( 'foo' );\n\n            expect( mockStdout ).toHaveBeenCalledTimes( 1 );\n            expect( mockStdout ).toHaveBeenCalledWith( 'wdioCucumberJsReporter:attachment', {\n                data: 'foo',\n                type: TEXT_PLAIN,\n            } );\n        } );\n\n        it( 'should be able to attach with all data', () => {\n            WdioCucumberJsJsonReporter.attach( 'foo', 'text/plain' );\n\n            expect( mockStdout ).toHaveBeenCalledTimes( 1 );\n            expect( mockStdout ).toHaveBeenCalledWith( 'wdioCucumberJsReporter:attachment', {\n                data: 'foo',\n                type: 'text/plain',\n            } );\n        } );\n    } );\n\n    describe( 'cucumberJsAttachment', () => {\n        it( 'should be able to add embeddings to a current step when they have not been added', () => {\n            const pendingStep = { foo: 'current-step', status: PENDING };\n            const getCurrentStepSpy = jest.spyOn( tmpReporter, 'getCurrentStep' ).mockReturnValue( pendingStep );\n\n            tmpReporter.report.feature = EMPTY_FEATURE;\n            tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n            tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n            expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n\n            tmpReporter.cucumberJsAttachment( { data: 'data', type: 'text/plain' } );\n\n            expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n            expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n\n        it( 'should be able to add embeddings to a current step which already has embeddings', () => {\n            const pendingStep: Step = {\n                foo: 'current-step',\n                result: { duration: 1, status: PENDING },\n                embeddings: [{ data: 'data-1', mime_type: 'text/plain' }],\n            };\n            const getCurrentStepSpy = jest.spyOn( tmpReporter, 'getCurrentStep' ).mockReturnValue( pendingStep );\n\n            tmpReporter.report.feature = EMPTY_FEATURE;\n            tmpReporter.report.feature.elements.push( EMPTY_SCENARIO );\n            tmpReporter.report.feature.elements[0].steps.push( pendingStep );\n\n            expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n\n            tmpReporter.cucumberJsAttachment( { data: 'data-2', type: 'text/plain' } );\n\n            expect( tmpReporter.report.feature.elements[0].steps[0] ).toMatchSnapshot();\n            expect( getCurrentStepSpy ).toHaveBeenCalledTimes( 1 );\n        } );\n    } );\n} );\n"]}