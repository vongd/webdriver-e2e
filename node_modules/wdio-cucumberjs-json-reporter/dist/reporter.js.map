{"version":3,"file":"reporter.js","sourceRoot":"","sources":["../lib/reporter.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    AFTER,\n    BEFORE,\n    DEFAULT_JSON_FOLDER,\n    DEFAULT_LANGUAGE,\n    DEFAULT_REPORT_FILE_PER_RETRY,\n    FEATURE,\n    PASSED,\n    //   PENDING,\n    SCENARIO,\n    TEXT_PLAIN,\n} from './constants';\nimport { AttachmentType, CucumberAttachmentData, CucumberJsAttachment, Feature, MetadataObject, Report, Scenario, Step } from './models';\nimport { HookStatsExtended, SuiteStatsExtended, TestStatsExtended } from './types/wdio';\nimport WDIOReporter, { HookStats, RunnerStats, SuiteStats, TestStats } from '@wdio/reporter';\nimport { existsSync, outputJsonSync, readJsonSync } from 'fs-extra';\nimport { CucumberJsJsonReporterInterface } from './types';\nimport { Metadata } from './metadata';\nimport Utils from './utils';\nimport logger from '@wdio/logger';\nimport { resolve } from 'path';\n\nconst log = logger( 'wdio-multiple-cucumber-html-reporter' );\n\nexport class CucumberJsJsonReporter extends WDIOReporter {\n    public instanceMetadata: MetadataObject;\n    public report: Report;\n    public metadataClassObject: Metadata;\n    public utilsObject: Utils;\n\n    public constructor( public options: CucumberJsJsonReporterInterface ) {\n        super( options );\n        this.options = options;\n\n        if ( !this.options.jsonFolder ) {\n            this.options.jsonFolder = DEFAULT_JSON_FOLDER;\n            log.info( `The 'jsonFolder' was not set, it has been set to the default '${DEFAULT_JSON_FOLDER}'` );\n        }\n        if ( !this.options.language ) {\n            this.options.language = DEFAULT_LANGUAGE;\n            log.info( `The 'language' was not set, it has been set to the default '${DEFAULT_LANGUAGE}'` );\n        }\n        if ( this.options.reportFilePerRetry === undefined ) {\n            this.options.reportFilePerRetry = DEFAULT_REPORT_FILE_PER_RETRY;\n            log.info(\n                `The 'reportFilePerRetry' was not set, it has been set to the default '${DEFAULT_REPORT_FILE_PER_RETRY.toString()}'`,\n            );\n        }\n\n        this.instanceMetadata = null;\n        this.report = <Report>{};\n\n        this.registerListeners();\n        this.metadataClassObject = new Metadata();\n        this.utilsObject = new Utils();\n    }\n\n    /**\n     * Attach data to the report\n     */\n    public static attach( data: CucumberAttachmentData, type: AttachmentType = TEXT_PLAIN ): void {\n        // eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-unsafe-assignment\n        ( process.emit as Function )( 'wdioCucumberJsReporter:attachment', { data, type } );\n    }\n\n    /**\n     * Add a customer listener for the attachments\n     */\n    public registerListeners(): void {\n        process.on( 'wdioCucumberJsReporter:attachment', this.cucumberJsAttachment.bind( this ) );\n    }\n\n    /**\n     * The order of running of the `on*` is the following:\n     * - onRunnerStart\n     * - onSuiteStart (feature)\n     * - onSuiteStart (scenario)\n     * - onHookStart\n     * - onHookEnd\n     * - onTestStart\n     * - onBeforeCommand\n     * - onAfterCommand\n     * - onTestPass\n     * - onHookStart\n     * - onHookEnd\n     * - onSuiteEnd (scenario is done)\n     * - onSuiteEnd (feature is done)\n     * - onRunnerEnd\n     */\n\n    /**\n     * This hook is used to retrieve the browser data, but this is done only once\n     */\n    public onRunnerStart( runnerData: RunnerStats ): void {\n        if ( !this.instanceMetadata ) {\n            this.instanceMetadata = this.metadataClassObject.determineMetadata( runnerData );\n        }\n    }\n\n    /**\n     * This hook is called twice:\n     * 1. create the feature\n     * 2. add the scenario to the feature\n     */\n    public onSuiteStart( payload: SuiteStats ): void {\n        if ( !this.report.feature ) {\n            this.report.feature = this.getFeatureDataObject( payload );\n        }\n\n        /* istanbul ignore else */\n        if ( !this.report.feature.metadata ) {\n            this.report.feature = { ...this.report.feature, metadata: { ...this.instanceMetadata } };\n        }\n\n        if ( typeof this.report.feature.elements !== 'undefined' && payload.parent ) {\n            this.report.feature.elements.push( this.getScenarioDataObject( payload, this.report.feature.id ) );\n        }\n    }\n\n    /**\n     * This one is for the start of the hook and determines if this is a pending `before` or `after` hook.\n     * The data will be equal to a step, so a hook is added as a step.\n     */\n    public onHookStart( payload: HookStatsExtended ): void {\n        // There is always a scenario, take the last one\n        if ( this.options.disableHooks ) {\n            return;\n        }\n        const currentSteps = this.getCurrentScenario().steps;\n        payload.state = PASSED;\n        payload.keyword = this.utilsObject.containsSteps( currentSteps, this.options.language ) ? AFTER : BEFORE;\n\n        this.addStepData( payload );\n    }\n\n    /**\n     * This one is for the end of the hook, it directly comes after the onHookStart\n     * A hook is the same  as a 'normal' step, so use the update step\n     */\n    public onHookEnd( payload: HookStats ): void {\n        if ( this.options.disableHooks ) {\n            return;\n        }\n        payload.state = payload.error ? payload.state : PASSED;\n\n        return this.updateStepStatus( payload );\n    }\n\n    /**\n     * This one starts the step, which will be set to pending\n     */\n    public onTestStart( payload: TestStats ): void {\n        this.addStepData( payload );\n    }\n\n    // /**\n    //  * This one starts a command\n    //  *\n    //  * @param payload\n    //  */\n    // onBeforeCommand(payload) {\n    //     // console.log('\\nconst onBeforeCommand= ', JSON.stringify(payload), '\\n')\n    // }\n\n    // /**\n    //  * This is the result of the command\n    //  *\n    //  * @param payload\n    //  */\n    // onAfterCommand(payload) {\n    //     // console.log('\\nconst onAfterCommand= ', JSON.stringify(payload), '\\n')\n    // }\n\n    // onScreenshot(payload) {\n    //     // console.log('\\nconst onScreenshot= ', JSON.stringify(payload), '\\n')\n    // }\n\n    /**\n     * The passed step\n     */\n    public onTestPass( payload: TestStats ): void {\n        this.updateStepStatus( payload );\n    }\n\n    /**\n     * The failed step including the logs\n     */\n    public onTestFail( payload: TestStats ): void {\n        this.updateStepStatus( payload );\n    }\n\n    /**\n     * The skippe step\n     */\n    public onTestSkip( payload: TestStats ): void {\n        this.updateStepStatus( payload );\n    }\n\n    // onTestEnd(payload) {\n    //     console.log('\\nonTestEnd');\n    // }\n\n    // /**\n    //  * Executed twice:\n    //  * - at the end of a scenario\n    //  * - at the end of all scenario's\n    //  *\n    //  * @param payload\n    //  */\n    // onSuiteEnd(payload) {}\n\n    /**\n     * Runner is done, write the file\n     */\n    public onRunnerEnd(): void {\n        const uniqueId = String( Date.now() + Math.random() ).replace( '.', '' );\n        const filename = this.options.reportFilePerRetry\n            ? `${this.report.feature.id}_${uniqueId}.json`\n            : `${this.report.feature.id}.json`;\n        const jsonFolder = resolve( process.cwd(), this.options.jsonFolder );\n        const jsonFile = resolve( jsonFolder, filename );\n        const json = [this.report.feature];\n        // Check if there is an existing file, if so concat the data, else add the new\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        const output = existsSync( jsonFile ) ? json.concat( readJsonSync( jsonFile ) ) : json;\n\n        outputJsonSync( jsonFile, output );\n    }\n\n    /**\n     * All functions\n     */\n\n    /**\n     * Get the feature data object\n     */\n    public getFeatureDataObject( featureData: SuiteStats ): Feature {\n        const featureName = featureData.title;\n\n        return {\n            keyword: FEATURE,\n            type: featureData.type,\n            description: featureData.description || '',\n            // Sample  `uid: 'sample.feature:2:1'`, where:\n            // - [0]: file name\n            // - [1]: line in file\n            // - [2]: column\n            line: featureData.uid && featureData.uid.includes( ':' ) ? parseInt( featureData.uid.split( ':' )[1], 10 ) : null,\n            name: featureName,\n            uri: featureData.file || 'Can not be determined',\n            tags: featureData.tags || [],\n            elements: [],\n            id: featureName.replace( /[\\\\/?%*:|\"<> ]/g, '-' ).toLowerCase(),\n        };\n    }\n\n    /**\n     * Get the scenario data object\n     */\n    public getScenarioDataObject(\n        scenarioData: TestStatsExtended | SuiteStatsExtended | HookStatsExtended,\n        id: string,\n    ): Scenario {\n        const scenarioName = scenarioData.title;\n\n        return {\n            keyword: SCENARIO,\n            type: scenarioData.type,\n            description: scenarioData.description || '',\n            name: scenarioName,\n            tags: scenarioData.tags || [],\n            id: `${id};${scenarioData.title.replace( / /g, '-' ).toLowerCase()}`,\n            steps: [],\n        };\n    }\n\n    /**\n     * Get the step data object\n     */\n    public getStepDataObject( stepData: TestStatsExtended | HookStatsExtended ): Step {\n        const keyword =\n            stepData?.keyword || this.utilsObject.keywordStartsWith( stepData.title, this.options.language ) || '';\n        const title = ( stepData.title.split( keyword ).pop() || stepData.title || '' ).trim();\n        return {\n            arguments: stepData.argument ? [stepData.argument] : [],\n            keyword,\n            name: title,\n            result: {\n                status: stepData.state || '',\n                duration: ( stepData._duration || 0 ) * 1000000,\n                ...this.utilsObject.getFailedMessage( stepData ),\n            },\n            line: null,\n            match: {\n                location: 'can not be determined with webdriver.io',\n            },\n        };\n    }\n\n    /**\n     * Get the current scenario\n     */\n    public getCurrentScenario(): Scenario {\n        return this.report.feature.elements[this.report.feature.elements.length - 1];\n    }\n\n    /**\n     * Get the current step\n     */\n    public getCurrentStep(): Step {\n        const currentScenario = this.getCurrentScenario();\n\n        return currentScenario.steps[currentScenario.steps.length - 1];\n    }\n\n    /**\n     * Add step data to the current running scenario\n     */\n    public addStepData( test: TestStats | HookStats ): void {\n        // Always add the finished step to the end of the steps\n        // of the last current scenario that is running\n        this.getCurrentScenario().steps.push( this.getStepDataObject( test ) );\n    }\n\n    /**\n     * Add step data to the current running scenario\n     */\n    public updateStepStatus( test: TestStats | HookStats ): void {\n        // There is always a scenario, take the last one\n        const currentSteps = this.getCurrentScenario().steps;\n        const currentStepsLength = currentSteps.length;\n        const stepData = this.getStepDataObject( test );\n\n        currentSteps[currentStepsLength - 1] = { ...this.getCurrentStep(), ...stepData };\n    }\n\n    /**\n     * Add the attachment to the result\n     */\n    public cucumberJsAttachment( attachment: CucumberJsAttachment ): void {\n        // The attachment can be added to the current running scenario step\n        const currentStep = this.getCurrentStep();\n        const embeddings = {\n            data: attachment?.data,\n            mime_type: attachment.type,\n        };\n\n        // Check if there is an embedding, if not, add it, else push it\n        if ( !currentStep.embeddings ) {\n            currentStep.embeddings = [embeddings];\n        } else {\n            currentStep.embeddings.push( embeddings );\n        }\n    }\n}\n\n// CucumberJsJsonReporter.name = 'cucumberjs-json';\nexport default CucumberJsJsonReporter;\n"]}